apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: rds.rds.cluster
spec:
  group: rds.cluster
  names:
    kind: RDS
    listKind: RDSList
    plural: rds
    singular: rds
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RDS is the Schema for the rds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RDSSpec defines the desired state of RDS
            properties:
              clusterReplica:
                format: int32
                type: integer
              image:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "operator-sdk generate k8s" to regenerate code after
                  modifying this file Add custom validation using kubebuilder tags:
                  https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                type: string
              masterSize:
                format: int32
                type: integer
              redisConfig:
                properties:
                  client-output-buffer-limit:
                    type: string
                  cluster-node-timeout:
                    type: string
                  masterauth:
                    type: string
                  maxmemory:
                    type: string
                  maxmemory-policy:
                    type: string
                  rename-command-config:
                    type: string
                  repl-backlog-size:
                    type: string
                  requirepass:
                    type: string
                required:
                - client-output-buffer-limit
                - cluster-node-timeout
                - masterauth
                - maxmemory
                - maxmemory-policy
                - rename-command-config
                - repl-backlog-size
                - requirepass
                type: object
              resources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                type: object
              storage:
                properties:
                  class:
                    type: string
                  delete-claim:
                    type: boolean
                  size:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  type:
                    type: string
                required:
                - class
                - delete-claim
                - size
                - type
                type: object
            required:
            - clusterReplica
            - image
            - masterSize
            - redisConfig
            type: object
          status:
            description: RDSStatus defines the observed state of RDS
            properties:
              masterReplica:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "operator-sdk generate k8s" to regenerate
                  code after modifying this file Add custom validation using kubebuilder
                  tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
                format: int32
                type: integer
              podInfoList:
                description: 'TODO: 已经准备好的master数量、slave数量   1/3'
                items:
                  properties:
                    podIP:
                      type: string
                    podName:
                      type: string
                    role:
                      type: string
                    state:
                      description: PodPhase is a label for the condition of a pod
                        at the current time.
                      type: string
                    uid:
                      description: UID is a type that holds unique ID values, including
                        UUIDs.  Because we don't ONLY use UUIDs, this is an alias
                        to string.  Being a type captures intent and helps make sure
                        that UIDs and names do not get conflated.
                      type: string
                  required:
                  - podIP
                  - podName
                  - role
                  - state
                  - uid
                  type: object
                type: array
              slaveReplica:
                format: int32
                type: integer
            required:
            - masterReplica
            - podInfoList
            - slaveReplica
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
